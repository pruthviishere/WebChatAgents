2025-04-24 01:08:52,775 Starting   vhi
2025-04-24 01:08:52,783 Selected extractor beautiful_soup for URL: https://docs.firecrawl.dev/sdks/python
2025-04-24 01:08:52,820 Starting new HTTPS connection (1): docs.firecrawl.dev:443
2025-04-24 01:08:52,972 https://docs.firecrawl.dev:443 "GET /sdks/python HTTP/1.1" 200 None
2025-04-24 01:08:52,974 result <Response [200]>
2025-04-24 01:08:55,659 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a helpful assistant that provides information in JSON format.'}, {'role': 'user', 'content': '\n    You are an expert business analyst. Analyze the following website content and extract key business information.\n    Website Content:\n    Title: Python SDK | Firecrawl\nMeta Description: Firecrawl Python SDK is a wrapper around the Firecrawl API to help you easily turn websites into markdown.\nMeta Keywords: \n\nContent:\nPython SDK | FirecrawlFirecrawl Docs home pagev1Search or ask...StatusSupportmendableai/firecrawlmendableai/firecrawlSearch...NavigationSDKsPythonDocumentationSDKsLearnIntegrationsAPI ReferencePlaygroundBlogCommunityChangelogOverallOverviewSDKsPythonNodeGoRustSDKsPythonFirecrawl Python SDK is a wrapper around the Firecrawl API to help you easily turn websites into markdown.\u200bInstallation\nTo install the Firecrawl Python SDK, you can use pip:\nPythonpip install firecrawl-py\n\u200bUsage\nGet an API key from firecrawl.dev\nSet the API key as an environment variable named FIRECRAWL_API_KEY or pass it as a parameter to the FirecrawlApp class.\nHere’s an example of how to use the SDK:\nPythonfrom firecrawl import FirecrawlApp\napp = FirecrawlApp(api_key="fc-YOUR_API_KEY")\n# Scrape a website:\nscrape_status = app.scrape_url(\n\'https://firecrawl.dev\',\nformats=[\'markdown\', \'html\']\n)\nprint(scrape_status)\n# Crawl a website:\ncrawl_status = app.crawl_url(\n\'https://firecrawl.dev\',\nlimit=100,\nscrape_options=ScrapeOptions(formats=[\'markdown\', \'html\'])\n)\nprint(crawl_status)\n\u200bScraping a URL\nTo scrape a single URL, use the scrape_url method. It takes the URL as a parameter and returns the scraped data as a dictionary.\nPython# Scrape a website:\nscrape_result = app.scrape_url(\'firecrawl.dev\', formats=[\'markdown\', \'html\'])\nprint(scrape_result)\n\u200bCrawling a Website\nTo crawl a website, use the crawl_url method. It takes the starting URL and optional parameters as arguments. The params argument allows you to specify additional options for the crawl job, such as the maximum number of pages to crawl, allowed domains, and the output format.\nPythoncrawl_status = app.crawl_url(\n\'https://firecrawl.dev\',\nlimit=100,\nscrape_options=ScrapeOptions(formats=[\'markdown\', \'html\']),\npoll_interval=30\n)\nprint(crawl_status)\n\u200bAsynchronous Crawling\nLooking for async operations? Check out the Async Class section below.\nTo crawl a website asynchronously, use the crawl_url_async method. It returns the crawl ID which you can use to check the status of the crawl job. It takes the starting URL and optional parameters as arguments. The params argument allows you to specify additional options for the crawl job, such as the maximum number of pages to crawl, allowed domains, and the output format.\nPythoncrawl_status = app.async_crawl_url(\n\'https://firecrawl.dev\',\nlimit=100,\nscrape_options=ScrapeOptions(formats=[\'markdown\', \'html\']),\n)\nprint(crawl_status)\n\u200bChecking Crawl Status\nTo check the status of a crawl job, use the check_crawl_status method. It takes the job ID as a parameter and returns the current status of the crawl job.\nPythoncrawl_status = app.check_crawl_status("<crawl_id>")\nprint(crawl_status)\n\u200bCancelling a Crawl\nTo cancel an asynchronous crawl job, use the cancel_crawl method. It takes the job ID of the asynchronous crawl as a parameter and returns the cancellation status.\nPythoncancel_crawl = app.cancel_crawl(id)\nprint(cancel_crawl)\n\u200bMap a Website\nUse map_url to generate a list of URLs from a website. The params argument let you customize the mapping process, including options to exclude subdomains or to utilize the sitemap.\nPython# Map a website:\nmap_result = app.map_url(\'https://firecrawl.dev\')\nprint(map_result)\n\u200bCrawling a Website with WebSockets\nTo crawl a website with WebSockets, use the crawl_url_and_watch method. It takes the starting URL and optional parameters as arguments. The params argument allows you to specify additional options for the crawl job, such as the maximum number of pages to crawl, allowed domains, and the output format.\nPython# inside an async function...\nnest_asyncio.apply()\n# Define event handlers\ndef on_document(detail):\nprint("DOC", detail)\ndef on_error(detail):\nprint("ERR", detail[\'error\'])\ndef on_done(detail):\nprint("DONE", detail[\'status\'])\n# Function to start the crawl and watch process\nasync def start_crawl_and_watch():\n# Initiate the crawl job and get the watcher\nwatcher = app.crawl_url_and_watch(\'firecrawl.dev\', exclude_paths=[\'blog/*\'], limit=5)\n# Add event listeners\nwatcher.add_event_listener("document", on_document)\nwatcher.add_event_listener("error", on_error)\nwatcher.add_event_listener("done", on_done)\n# Start the watcher\nawait watcher.connect()\n# Run the event loop\nawait start_crawl_and_watch()\n\u200bError Handling\nThe SDK handles errors returned by the Firecrawl API and raises appropriate exceptions. If an error occurs during a request, an exception will be raised with a descriptive error message.\n\u200bAsync Class\nFor async operations, you can use the AsyncFirecrawlApp class. Its methods are the same as the FirecrawlApp class, but they don’t block the main thread.\nPythonfrom firecrawl import AsyncFirecrawlApp\napp = AsyncFirecrawlApp(api_key="YOUR_API_KEY")\n# Async Scrape\nasync def example_scrape():\nscrape_result = await app.scrape_url(url="https://example.com")\nprint(scrape_result)\n# Async Crawl\nasync def example_crawl():\ncrawl_result = await app.crawl_url(url="https://example.com")\nprint(crawl_result)\nSuggest editsRaise issueOverviewNodexgithublinkedinPowered by MintlifyOn this pageInstallationUsageScraping a URLCrawling a WebsiteAsynchronous CrawlingChecking Crawl StatusCancelling a CrawlMap a WebsiteCrawling a Website with WebSocketsError HandlingAsync Class\n    Website URL: https://docs.firecrawl.dev/sdks/python\n    Return the results in JSON format with the following structure:\n    {\'$defs\': {\'CompanySize\': {\'properties\': {\'size_category\': {\'description\': \'Size category (small, medium, large)\', \'title\': \'Size Category\', \'type\': \'string\'}, \'employee_range\': {\'anyOf\': [{\'type\': \'string\'}, {\'type\': \'null\'}], \'default\': None, \'description\': \'Approximate employee count range\', \'title\': \'Employee Range\'}, \'confidence_score\': {\'description\': \'Confidence score for the size estimation\', \'title\': \'Confidence Score\', \'type\': \'number\'}}, \'required\': [\'size_category\', \'confidence_score\'], \'title\': \'CompanySize\', \'type\': \'object\'}, \'Industry\': {\'properties\': {\'industry\': {\'description\': \'Industry the company belongs to\', \'title\': \'Industry\', \'type\': \'string\'}, \'confidence_score\': {\'description\': \'Confidence score for the industry classification\', \'title\': \'Confidence Score\', \'type\': \'number\'}, \'sub_industries\': {\'anyOf\': [{\'items\': {\'type\': \'string\'}, \'type\': \'array\'}, {\'type\': \'null\'}], \'default\': None, \'description\': \'List of potential sub-industries\', \'title\': \'Sub Industries\'}}, \'required\': [\'industry\', \'confidence_score\'], \'title\': \'Industry\', \'type\': \'object\'}, \'Location\': {\'properties\': {\'headquarters\': {\'anyOf\': [{\'type\': \'string\'}, {\'type\': \'null\'}], \'default\': None, \'description\': \'Company headquarters location\', \'title\': \'Headquarters\'}, \'offices\': {\'anyOf\': [{\'items\': {\'type\': \'string\'}, \'type\': \'array\'}, {\'type\': \'null\'}], \'default\': None, \'description\': \'List of office locations if available\', \'title\': \'Offices\'}, \'countries_of_operation\': {\'anyOf\': [{\'items\': {\'type\': \'string\'}, \'type\': \'array\'}, {\'type\': \'null\'}], \'default\': None, \'description\': \'Countries where the company operates\', \'title\': \'Countries Of Operation\'}, \'confidence_score\': {\'description\': \'Confidence score for the location information\', \'title\': \'Confidence Score\', \'type\': \'number\'}}, \'required\': [\'confidence_score\'], \'title\': \'Location\', \'type\': \'object\'}}, \'properties\': {\'company_name\': {\'description\': \'Name of the company\', \'title\': \'Company Name\', \'type\': \'string\'}, \'website_url\': {\'description\': \'URL of the analyzed website\', \'title\': \'Website Url\', \'type\': \'string\'}, \'industry\': {\'$ref\': \'#/$defs/Industry\', \'description\': \'Industry information\'}, \'company_size\': {\'$ref\': \'#/$defs/CompanySize\', \'description\': \'Company size information\'}, \'location\': {\'$ref\': \'#/$defs/Location\', \'description\': \'Location information\'}, \'description\': {\'description\': \'Brief description of the company\', \'title\': \'Description\', \'type\': \'string\'}, \'products_services\': {\'description\': \'List of products or services offered\', \'items\': {\'type\': \'string\'}, \'title\': \'Products Services\', \'type\': \'array\'}, \'technologies\': {\'anyOf\': [{\'items\': {\'type\': \'string\'}, \'type\': \'array\'}, {\'type\': \'null\'}], \'default\': None, \'description\': \'Technologies mentioned on the website\', \'title\': \'Technologies\'}, \'founded_year\': {\'anyOf\': [{\'type\': \'integer\'}, {\'type\': \'null\'}], \'default\': None, \'description\': \'Year the company was founded, if available\', \'title\': \'Founded Year\'}}, \'required\': [\'company_name\', \'website_url\', \'industry\', \'company_size\', \'location\', \'description\', \'products_services\'], \'title\': \'BusinessDetails\', \'type\': \'object\'}\n    '}], 'model': 'gpt-4o-mini', 'response_format': {'type': 'json_object'}, 'temperature': 0.0}}
2025-04-24 01:08:55,697 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-24 01:08:55,698 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-04-24 01:08:55,746 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1273ab3d0>
2025-04-24 01:08:55,747 start_tls.started ssl_context=<ssl.SSLContext object at 0x1272fa060> server_hostname='api.openai.com' timeout=5.0
2025-04-24 01:08:55,762 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x127391c50>
2025-04-24 01:08:55,762 send_request_headers.started request=<Request [b'POST']>
2025-04-24 01:08:55,763 send_request_headers.complete
2025-04-24 01:08:55,763 send_request_body.started request=<Request [b'POST']>
2025-04-24 01:08:55,763 send_request_body.complete
2025-04-24 01:08:55,764 receive_response_headers.started request=<Request [b'POST']>
2025-04-24 01:09:01,129 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 23 Apr 2025 19:39:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-ltrjfxuxjdg44crscs3ryfmt'), (b'openai-processing-ms', b'4906'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-project-requests', b'3'), (b'x-ratelimit-limit-project-tokens', b'10000'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-project-requests', b'2'), (b'x-ratelimit-remaining-project-tokens', b'7762'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'197762'), (b'x-ratelimit-reset-project-requests', b'20s'), (b'x-ratelimit-reset-project-tokens', b'13.428s'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'671ms'), (b'x-request-id', b'req_c8ebc7f726dbf2606e9d5b885ba39f02'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=FGPEymC_q6Ehya6gNsjGTeLiESTa2sutc9OEapcm4Qg-1745437141-1.0.1.1-x8T5hKLxdyiu3nebVO0aaDzDC0uvpROfYp.sNY2qy_QPeXaUXKjHvJ1qFSxihMvG7NcqYCBNjBpxYctDffxA0CuIMAbq8wqiuQvyRooAi8Q; path=/; expires=Wed, 23-Apr-25 20:09:01 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=unMHoQzohVkTzecEQHJPN2mfkGdW_jmtS3DVqeLt_EA-1745437141034-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'934fd2f298313e09-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-24 01:09:01,132 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-04-24 01:09:01,133 receive_response_body.started request=<Request [b'POST']>
2025-04-24 01:09:01,133 receive_response_body.complete
2025-04-24 01:09:01,134 response_closed.started
2025-04-24 01:09:01,134 response_closed.complete
2025-04-24 01:09:01,134 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Wed, 23 Apr 2025 19:39:01 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-ltrjfxuxjdg44crscs3ryfmt'), ('openai-processing-ms', '4906'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-project-requests', '3'), ('x-ratelimit-limit-project-tokens', '10000'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-project-requests', '2'), ('x-ratelimit-remaining-project-tokens', '7762'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '197762'), ('x-ratelimit-reset-project-requests', '20s'), ('x-ratelimit-reset-project-tokens', '13.428s'), ('x-ratelimit-reset-requests', '8.64s'), ('x-ratelimit-reset-tokens', '671ms'), ('x-request-id', 'req_c8ebc7f726dbf2606e9d5b885ba39f02'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=FGPEymC_q6Ehya6gNsjGTeLiESTa2sutc9OEapcm4Qg-1745437141-1.0.1.1-x8T5hKLxdyiu3nebVO0aaDzDC0uvpROfYp.sNY2qy_QPeXaUXKjHvJ1qFSxihMvG7NcqYCBNjBpxYctDffxA0CuIMAbq8wqiuQvyRooAi8Q; path=/; expires=Wed, 23-Apr-25 20:09:01 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=unMHoQzohVkTzecEQHJPN2mfkGdW_jmtS3DVqeLt_EA-1745437141034-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '934fd2f298313e09-BOM'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-04-24 01:09:01,134 request_id: req_c8ebc7f726dbf2606e9d5b885ba39f02
